#!/usr/bin/perl
#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009, 2010
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
##############################################################################
BEGIN {	$V6evalTool::TestVersion = '$Name: REL_1_0_3 $'; }

use lib "../common";
use V6evalTool;
use SCTP;

%pktdesc = (
	sctp_chunk_asconf_del_addr	=> "Recv SCTP CHUNK_ASCONF (Delete IP Address)",
	sctp_chunk_asconf_ack_snd	=> "Send SCTP CHUNK_ASCONF_ACK (Success Indication)",
	sctp_chunk_heartbeat_link1	=> "Send SCTP CHUNK_HEARTBEAT (Link1)",
	sctp_chunk_abort_link1		=> "Recv SCTP CHUNK_ABORT (Link1)",
);

$IF0 = Link0;
$IF1 = Link1;

vCapture($IF0);
vCapture($IF1);

sctpCheckEnv($IF0);

sctpStartInteractiveServer($IF0, "add=$SCTP::CONF{'SCTP_NUT_NET1_ADDR'}", "recv",
			"del=$SCTP::CONF{'SCTP_NUT_NET1_ADDR'}", "recv");

vConnect($IF0);

vLogHTML('<B>================ Main Test =================</B>');

%ret = vWarpRecv($IF0, 10, 0, 0, sctp_chunk_asconf_del_addr);
if ($ret{status} != 0 || $ret{recvFrame} ne sctp_chunk_asconf_del_addr) {
	vLogHTML('Cannot receive SCTP CHUNK_ASCONF<BR>');
	vSend($IF0, sctp_chunk_abort_snd);
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>');
	exit $V6evalTool::exitFail;
}

sctpFetchAsconfField(\%ret);

vSend($IF0, sctp_chunk_asconf_ack_snd);

vLogHTML('=== Check Whether Address is Delete Success ===');

vSend($IF1, sctp_chunk_heartbeat_link1);

%ret = vWarpRecv($IF1, 10, 0, 0, sctp_chunk_abort_link1);
if ($ret{status} != 0 || $ret{recvFrame} ne sctp_chunk_abort_link1) {
	vLogHTML('Cannot receive SCTP CHUNK_ABORT<BR>');
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>');
	exit $V6evalTool::exitFail;
}

vClose($IF0);

vLogHTML(OK);
exit $V6evalTool::exitPass;

######################################################################
__END__

=head1 NAME

  AsconfAckWithDelSuccess.seq - ASCONF-ACK chunk is received with Success Indication parameter indicating Delete IP Address success

=head1 PURPOSE

  To check that if ASCONF-ACK chunk is received with Success Indication
  parameter indicating Delete IP Address success then the endpoint should
  delete the address from the association.

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./AsconfAckWithDelSuccess.seq">./AsconfAckWithDelSuccess.seq</A> [-tooloption ...] -pkt <A HREF="./AsconfAckWithDelSuccess.def">./AsconfAckWithDelSuccess.def</A>
    -tooloption : v6eval tool option
  See Also: <A HREF="../common/STD_PKT_COMMON.def">../common/STD_PKT_COMMON.def</A>
            <A HREF="../common/SCTP_COMMON.def">../common/SCTP_COMMON.def</A>
</PRE>

=end html

=head1 PRE-TEST CONDITION

  Association is established between endpoint A and B. Arrange the date
  in endpoint B such that ASCONF chunk with Delete IP Address Parameter
  is sent to endpoint A.

=head1 TEST PROCEDURE

  Endpoint A                           Endpoint B                ULP
  (ESTABLISHED)                        (ESTABLISHED)

                <-----------------      ASCONF
                                        (Delete IP Address X)
  ASCONF-ACK    ----------------->
  (Success Indication)
  HEARTBEAT     ----------------->
  (IP Address X)
                <-----------------      ABORT

  TEST DESCRIPTION:

  1. Sending ASCONF message with Delete IP Address Parameter from
     endpoint B to A.
     Record the message sequence using a signal emulator.
  2. Send ASCONF-ACK message with Success Indication parameter
     indicating Delete IP Address success from endpoint A to B.
  3. Check A: Endpoint B should delete the IP Address and consider
     the address no longer part of the association.

=head1 NOTE

  None

=head1 REFERENCE

  5.3.  General Rules for Address Manipulation

=begin html
<PRE>
    F13) <B>When an endpoint receives a valid request to DELETE an IP
         address, the endpoint MUST consider the address no longer part
         of the association.  It MUST NOT send SCTP packets for the
         association to that address and it MUST treat subsequent packets
         received from that address as Out Of The Blue.</B>
</PRE>

=end html

         During the time interval between sending out the ASCONF and
         receiving the ASCONF-ACK, it MAY be possible to receive DATA
         Chunks out of order.  The following examples illustrate these
         problems:

