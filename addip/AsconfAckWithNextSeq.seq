#!/usr/bin/perl
#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009, 2010
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
##############################################################################
BEGIN {	$V6evalTool::TestVersion = '$Name: REL_1_0_2 $'; }

use lib "../common";
use V6evalTool;
use SCTP;

%pktdesc = (
	sctp_chunk_asconf_ack_bad_seq	=> "Send SCTP CHUNK_ASCONF_ACK (Bad Sequence Number)",
	sctp_chunk_abort_bad_seq	=> "Recv SCTP CHUNK_ABORT (Illegal ASCONF-ACK)",
);

$IF0 = Link0;

vCapture($IF0);

sctpCheckEnv($IF0);

sctpStartServer($IF0);

vConnect($IF0);

vLogHTML('<B>================ Main Test =================</B>');

vSend($IF0, sctp_chunk_asconf_ack_bad_seq);

%ret = vWarpRecv($IF0, 10, 0, 0, sctp_chunk_abort_bad_seq);
if ($ret{status} != 0 || $ret{recvFrame} ne sctp_chunk_abort_bad_seq) {
	vLogHTML('Cannot receive SCTP CHUNK_ABORT<BR>');
	vSend($IF0, sctp_chunk_abort_snd);
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>');
	exit $V6evalTool::exitFail;
}

vLogHTML(OK);
exit $V6evalTool::exitPass;

######################################################################
__END__

=head1 NAME

  AsconfAckWithNextSeq.seq - ASCONF-ACK chunk is received with the next Sequence Number but no ASCONF Chunk is outstanding

=head1 PURPOSE

  To check that if ASCONF-ACK chunk is received with Sequence Number
  equal to next Sequence Number but no ASCONF Chunk is outstanding
  then the endpoint MUST ABORT the association.

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./AsconfAckWithNextSeq.seq">./AsconfAckWithNextSeq.seq</A> [-tooloption ...] -pkt <A HREF="./AsconfAckWithNextSeq.def">./AsconfAckWithNextSeq.def</A>
    -tooloption : v6eval tool option
  See Also: <A HREF="../common/STD_PKT_COMMON.def">../common/STD_PKT_COMMON.def</A>
            <A HREF="../common/SCTP_COMMON.def">../common/SCTP_COMMON.def</A>
</PRE>

=end html

=head1 PRE-TEST CONDITION

  Association is established between endpoint A and B. Arrange the date
  in endpoint A such that ASCONF-ACK chunk with Sequence Number equal to
  next Sequence Number is sent to endpoint B.

=head1 TEST PROCEDURE

  Endpoint A                           Endpoint B                ULP
  (ESTABLISHED)                        (ESTABLISHED)

  ASCONF-ACK    ----------------->
  (Sequence Number equal to next Sequence Number)
                <-----------------      ABORT

  TEST DESCRIPTION:

  1. Send ASCONF-ACK chunk from endpoint A to B with Sequence Number
     equal to next Sequence Number.
  2. Check A: ABORT chunk should be received at endpoint A.

=head1 NOTE

  None

=head1 REFERENCE

  RFC 5061

  5.3.  General Rules for Address Manipulation

    When building TLV parameters for the ASCONF Chunk that will add or
    delete IP addresses, the following rules MUST be applied:

=begin html
<PRE>
    F0)  <B>If an endpoint receives an ASCONF-ACK that is greater than or
         equal to the next Sequence Number to be used but no ASCONF Chunk
         is outstanding, the endpoint MUST ABORT the association.</B>  Note
         that a Sequence Number is greater than if it is no more than
         2^^31-1 larger than the current Sequence Number (using serial
         arithmetic).
</PRE>

=end html

