#!/usr/bin/perl
#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
##############################################################################
BEGIN {	$V6evalTool::TestVersion = '$Name: REL_1_0_2 $'; }

use lib "../common";
use V6evalTool;
use SCTP;

%pktdesc = (
	sctp_chunk_asconf_set_prim	=> "Recv SCTP CHUNK_ASCONF (Set Primary IP Address)",
	sctp_chunk_asconf_ack_ok	=> "Send SCTP CHUNK_ASCONF_ACK (Success Indication)",
);

$IF0 = Link0;

vCapture($IF0);

sctpCheckEnv($IF0);

sctpStartInteractiveServer($IF0, "recv", "pprim=$SCTP::CONF{'SCTP_NUT_NET0_ADDR'}", "recv");

vConnect($IF0);

vLogHTML('<B>================ Main Test =================</B>');

%ret = vWarpRecv($IF0, 10, 0, 0, sctp_chunk_asconf_set_prim);
if ($ret{status} != 0 || $ret{recvFrame} ne sctp_chunk_asconf_set_prim) {
	vLogHTML('Cannot receive SCTP CHUNK_ASCONF<BR>');
	vSend($IF0, sctp_chunk_abort_snd);
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>');
	exit $V6evalTool::exitFail;
}

sctpFetchAsconfField(\%ret);

vSend($IF0, sctp_chunk_asconf_ack_ok);

vClose($IF0);

vLogHTML(OK);
exit $V6evalTool::exitPass;

######################################################################
__END__

=head1 NAME

  AsconfAckWithSetSuccess.seq - ASCONF-ACK chunk is received with Success Indication parameter indicating Set Primary Address success

=head1 PURPOSE

  To check that if ASCONF-ACK chunk is received with Success Indication
  parameter indicating Set Primary Address success then the endpoint should
  mark the specified address as the primary address to send data to.

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./AsconfAckWithSetSuccess.seq">./AsconfAckWithSetSuccess.seq</A> [-tooloption ...] -pkt <A HREF="./AsconfAckWithSetSuccess.def">./AsconfAckWithSetSuccess.def</A>
    -tooloption : v6eval tool option
  See Also: <A HREF="../common/STD_PKT_COMMON.def">../common/STD_PKT_COMMON.def</A>
            <A HREF="../common/SCTP_COMMON.def">../common/SCTP_COMMON.def</A>
</PRE>

=end html

=head1 PRE-TEST CONDITION

  Association is established between endpoint A and B. Arrange the date
  in endpoint B such that ASCONF chunk with Set Primary Address Parameter
  is sent to endpoint A.

=head1 TEST PROCEDURE

  Endpoint A                           Endpoint B                ULP
  (ESTABLISHED)                        (ESTABLISHED)

                <-----------------      ASCONF
                                        (Set Primary Address)
  ASCONF-ACK    ----------------->
  (Success Indication)

  TEST DESCRIPTION:

  1. Sending ASCONF message with Set Primary Address Parameter from
     endpoint B to A.
     Record the message sequence using a signal emulator.
  2. Send ASCONF-ACK message with Success Indication parameter
     indicating Set Primary Address success from endpoint A to B.
  3. Check A: Endpoint B should mark the specified address as the
     primary address to send data to.

=head1 NOTE

  None

=head1 REFERENCE

  RFC 5061

  4.2.4.  Set Primary IP Address

          0                   1                   2                   3
          0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
         |        Type =0xC004           |    Length = Variable          |
         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
         |               ASCONF-Request Correlation ID                   |
         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
         |                       Address Parameter                       |
         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     ASCONF-Request Correlation ID: 32 bits

     This is an opaque integer assigned by the sender to identify each
     request parameter.  The receiver of the ASCONF Chunk will copy this
     32-bit value into the ASCONF Response Correlation ID field of the
     ASCONF-ACK response parameter.  The sender of the ASCONF can use this
     same value in the ASCONF-ACK to find which request the response is
     for.  Note that the receiver MUST NOT change this 32-bit value.

     Address Parameter: TLV

=begin html
<PRE>
     This field contains an IPv4 or IPv6 address parameter as described in
     Section 3.3.2.1 of [RFC4960].  The complete TLV is wrapped within
     this parameter.  <B>It requests the receiver to mark the specified
     address as the primary address to send data to (see Section 5.1.2 of
     [RFC4960]).</B>  The receiver MAY mark this as its primary address upon
     receiving this request.  If the address 0.0.0.0 or ::0 is provided,
     the receiver MAY mark the source address of the packet as its
     primary.
</PRE>

=end html

