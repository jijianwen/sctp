// SCTP Conformance Test Suite Implementation
// (C) Copyright Fujitsu Ltd. 2008, 2009
//
// This file is part of the SCTP Conformance Test Suite implementation.
//
// The SCTP Conformance Test Suite implementation is free software;
// you can redistribute it and/or modify it under the terms of
// the GNU General Public License version 2 as published by
// the Free Software Foundation.
//
// The SCTP Conformance Test Suite implementation is distributed in the
// hope that it will be useful, but WITHOUT ANY WARRANTY; without even
// the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
// PURPOSE. See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with GNU CC; see the file COPYING.  If not, write to
// the Free Software Foundation, 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.
//
// Please send any bug reports or fixes you make to the
// email address(es):
//    networktest sctp <networktest-sctp@lists.sourceforge.net>
//
// Or submit a bug report through the following website:
//    http://networktest.sourceforge.net/
//
// Written or modified by:
//    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
//    Wei Yongjun <yjwei@cn.fujitsu.com>
//
// Any bugs reported given to us we will try to fix... any fixes shared will
// be incorporated into the next SCTP release.
//

#include "../common/STD_PKT_COMMON.def"

//
// SCTP CHUNK_ASCONF
//
PKG_SCTP_SHORT_SEND_AUTH(
	sctp_chunk_asconf_set_prim,
	{
		chunk = chunk_asconf_set_prim;
	}
)

CHUNK_ASCONF chunk_asconf_set_prim {
	SerialNumber = SSERIAL;
	Param = addr0;
	Param = asconf_set_prim;
}

SetPrimaryAddress asconf_set_prim {
	Address = addr1;
}

#if (ENABLE_IPV6 == 0)

IPv4Address addr0 {
	Address = v4(SCTP4_TN_NET0_ADDR);
}

IPv4Address addr1 {
	Address = v4(SCTP4_TN_NET1_ADDR);
}

#else

IPv6Address addr0 {
	Address = SCTP6_TN_NET0_ADDR;
}

IPv6Address addr1 {
	Address = SCTP6_TN_NET1_ADDR;
}

#endif /* #if (ENABLE_IPV6 == 0) */

//
// SCTP CHUNK_ASCONF_ACK
//
PKG_SCTP_SHORT_RECV_AUTH(
	sctp_chunk_asconf_ack_err,
	{
		chunk = chunk_asconf_ack_err;
	}
)

CHUNK_ASCONF_ACK chunk_asconf_ack_err {
	SerialNumber = SSERIAL;
	Param = asconf_ack_err;
}

ErrorCauseIndication asconf_ack_err {
	Error = error_unres_addr;
}

UnresolvableAddress error_unres_addr {
	Address = asconf_set_prim;
}

