#!/usr/bin/perl
#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009, 2010
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
##############################################################################
BEGIN {	$V6evalTool::TestVersion = '$Name: REL_1_0_3 $'; }

use lib "../common";
use V6evalTool;
use SCTP;

%pktdesc = (
	sctp_chunk_asconf_del_addr	=> "Send SCTP CHUNK_ASCONF (Delete IP Address)",
	sctp_chunk_asconf_ack_err	=> "Recv SCTP CHUNK_ASCONF_ACK (Delete Last Remaining IP Address Error)",
);

$IF0 = Link0;

vCapture($IF0);

sctpCheckEnv($IF0);

sctpStartServer($IF0);

vConnect($IF0);

vLogHTML('<B>================ Main Test =================</B>');

vSend($IF0, sctp_chunk_asconf_del_addr);

%ret = vWarpRecv($IF0, 10, 0, 0, sctp_chunk_asconf_ack_err);
if($ret{status} != 0 || $ret{recvFrame} ne sctp_chunk_asconf_ack_err) {
	vLogHTML('Cannot receive SCTP CHUNK_ASCONF_ACK<BR>');
	vSend($IF0, sctp_chunk_abort_snd);
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>');
	exit $V6evalTool::exitFail;
}

vSendMsg($IF0);

vClose($IF0);

vLogHTML(OK);
exit $V6evalTool::exitPass;

######################################################################
__END__

=head1 NAME

  DeleteLastRemainAddress.seq - ASCONF chunk is received with Delete IP Address to delete last remaining IP address from an association

=head1 PURPOSE

  To check if ASCONF chunk is received to delete the last remaining IP
  address of a peer endpoint, the receiver MUST send an Error Cause
  TLV with the error cause set to the new error code 'Request to
  Delete Last Remaining IP Address'.

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./DeleteLastRemainAddress.seq">./DeleteLastRemainAddress.seq</A> [-tooloption ...] -pkt <A HREF="./DeleteLastRemainAddress.def">./DeleteLastRemainAddress.def</A>
    -tooloption : v6eval tool option
  See Also: <A HREF="../common/STD_PKT_COMMON.def">../common/STD_PKT_COMMON.def</A>
            <A HREF="../common/SCTP_COMMON.def">../common/SCTP_COMMON.def</A>
</PRE>

=end html

=head1 PRE-TEST CONDITION

  Association is established between endpoint A and B. Arrange ASCONF
  in endpoint A such that ASCONF chunk with delete last remaining IP
  address parameter is sent to endpoint B.

=head1 TEST PROCEDURE

  Endpoint A                           Endpoint B                ULP
  (ESTABLISHED)                        (ESTABLISHED)

  ASCONF          ---------------->
  (Delete last remaining IP address)
                  <-----------------     ASCONF-ACK
                                         (Delete Last Remaining IP Address Error)

  TEST DESCRIPTION:

  1. Send ASCONF chunk from endpoint A to B with delete last remaining IP
     address parameter.
  2. Check A: ASCONF-ACK with delete last remaining IP address error should
     be received at endpoint A.

=head1 NOTE

  None

=head1 REFERENCE

  RFC 5061

  5.3.  General Rules for Address Manipulation

    When building TLV parameters for the ASCONF Chunk that will add or
    delete IP addresses, the following rules MUST be applied:

=begin html
<PRE>
    <B>F7)  If a request is received to delete the last remaining IP address
         of a peer endpoint, the receiver MUST send an Error Cause TLV
         with the Error Cause set to the new error code 'Request to
         Delete Last Remaining IP Address'.  The requested delete MUST
         NOT be performed or acted upon, other than to send the ASCONF-
         ACK.</B>
</PRE>

=end html

