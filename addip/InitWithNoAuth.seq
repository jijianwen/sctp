#!/usr/bin/perl
#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
##############################################################################
BEGIN {	$V6evalTool::TestVersion = '$Name: REL_1_0_1 $'; }

use lib "../common";
use V6evalTool;
use SCTP;

%pktdesc = (
	sctp_chunk_init_snd	=> "Send SCTP CHUNK_INIT (peer does not support AUTH)",
);

$IF0 = Link0;

vCapture($IF0);

sctpCheckEnv($IF0);

sctpStartServer($IF0);

vLogHTML('<B>================ Main Test =================</B>');

vSend($IF0, sctp_chunk_init_snd);

%ret = vWarpRecv($IF0, 10, 0, 0, sctp_chunk_abort_rcv);
if ($ret{status} != 0 || $ret{recvFrame} ne sctp_chunk_abort_rcv) {
	vLogHTML('Cannot receive SCTP CHUNK_ABORT<BR>');
	vSend($IF0, sctp_chunk_abort_snd);
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>');
	exit $V6evalTool::exitFail;
}

vLogHTML(OK);
exit $V6evalTool::exitPass;

######################################################################
__END__

=head1 NAME

  InitWithNoAuth.seq - INIT chunk is received to indicate the peer does not support the AUTH extension

=head1 PURPOSE

  To check that if INIT chunk is received to indicate the peer does not
  support the AUTH extension then the endpoint should send an ABORT in
  response.

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./InitWithNoAuth.seq">./InitWithNoAuth.seq</A> [-tooloption ...] -pkt <A HREF="./InitWithNoAuth.def">./InitWithNoAuth.def</A>
    -tooloption : v6eval tool option
  See Also: <A HREF="../common/STD_PKT_COMMON.def">../common/STD_PKT_COMMON.def</A>
            <A HREF="../common/SCTP_COMMON.def">../common/SCTP_COMMON.def</A>
</PRE>

=end html

=head1 PRE-TEST CONDITION

  Association is not established between endpoint A and B. Arrange the data
  in endpoint A such that INIT message indicate the peer the peer supports
  the ASCONF extension but does not support the AUTH extension is sent to
  endpoint B.

=head1 TEST PROCEDURE

  Endpoint A                           Endpoint B                ULP
  (ESTABLISHED)                        (ESTABLISHED)

  INIT          ----------------->
  (peer does not support AUTH)
                <-----------------      ABORT

  TEST DESCRIPTION:

  1. Send INIT chunk from endpoint A to B which indicate the peer
     supports the ASCONF extension but does not support the AUTH
     extension.
  2. Check A: ABORT should be received at endpoint A.

=head1 NOTE

  None

=head1 REFERENCE

  RFC 5061

  6.  Security Considerations

=begin html
<PRE>
    <B>If an SCTP endpoint that supports this extension receives an INIT
    that indicates that the peer supports the ASCONF extension but does
    NOT support the [RFC4895] extension, the receiver of such an INIT
    MUST send an ABORT in response.  Note that an implementation is
    allowed to silently discard such an INIT as an option as well, but
    under NO circumstance is an implementation allowed to proceed with
    the association setup by sending an INIT-ACK in response.</B>
</PRE>

=end html

    An implementation that receives an INIT-ACK that indicates that the
    peer does not support the [RFC4895] extension MUST NOT send the
    COOKIE-ECHO to establish the association.  Instead, the
    implementation MUST discard the INIT-ACK and report to the upper-
    layer user that an association cannot be established destroying the
    Transmission Control Block (TCB).

