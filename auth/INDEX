#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009, 2010
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
# $Name: REL_1_0_2 $
#
# <seq>:<def>:[<opt>]:[<log>]:<desc>
########################################################################
&print:<B>Initialize</B>
./Initialize.seq:/dev/null:::Initialization Test Environment

########################################################################
&print:<B>Establishment of an Association Shared Key</B>
./AuthInitWithoutRandom.seq:./AuthInitWithoutRandom.def:::The RANDOM parameter MUST be included once in the INIT or INIT-ACK chunk
./AuthInitWithoutChunks.seq:./AuthInitWithoutChunks.def:::The CHUNKS parameter MAY be omitted in the INIT or INIT-ACK chunk if it is empty
./AuthInitWithoutHmacAlgo.seq:./AuthInitWithoutHmacAlgo.def:::The HMAC-ALGO parameter MUST be included once in the INIT or INIT-ACK chunk

########################################################################
&print:<B>Sending Authenticated Chunks</B>
./AuthWithChunkAuth.seq:./AuthWithChunkAuth.def:::Send all requested chunks that have been authenticated where this has been requested by the peer
./AuthWithDataAuth.seq:./AuthWithDataAuth.def:-cpp='-DAUTH_ENABLE=1'::DATA chunks should be sent authenticated if this has been requested by the peer
./AuthIgnoreChunkTypes.seq:./AuthIgnoreChunkTypes.def:::INIT, INIT-ACK, SHUTDOWN-COMPLETE, and AUTH chunks listed in the CHUNKS parameter MUST be ignored
./AuthUsedFirstAlgo.seq:./AuthUsedFirstAlgo.def:::The receiver of an HMAC-ALGO parameter SHOULD use the first listed algorithm it supports

########################################################################
&print:<B>Receiving Authenticated Chunks</B>
./AuthWithBadHMACIdentifier.seq:./AuthWithBadHMACIdentifier.def:::Authentication Chunk is received with an unsupported HMAC Identifier
./AuthWithBadShareID.seq:./AuthWithBadShareID.def:::Authentication Chunk is received with no shared key match
./AuthWithBadHmac.seq:./AuthWithBadHmac.def:::Authentication Chunk is received with Message Authentication Code not match
./AuthWithoutCapable.seq:./AuthWithoutCapable.def:::Authentication Chunk is received from endpoint which has no AUTH capable

#./AuthAppearMoreThanOnce.seq:./AuthAppearMoreThanOnce.def:::The control chunk AUTH MUST NOT appear more than once in an SCTP packet

#./OotbAuthChunk.seq:./OotbAuthChunk.def:::AUTH chunk comes from an address with which endpoint has no association

########################################################################
&print:<B>Authentication Chunk Header</B>
./AuthWithBadChunkLength.seq:./AuthWithBadChunkLength.def:::Authentication Chunk is received with chunk length less than AUTH chunk header
./AuthWithBadHmacLength.seq:./AuthWithBadHmacLength.def:::Authentication Chunk is received with HMAC length not match HMAC Algorithm
   
########################################################################
&print:<B>Random Parameter Header</B>
./RandomNumberWithBadLength.seq:./RandomNumberWithBadLength.def:::The association MUST be aborted if the Random Number is not 32 bytes

########################################################################
&print:<B>Chunk List Parameter Header</B>
./ChunkListLengthLargerThan260.seq:./ChunkListLengthLargerThan260.def:::The maximum length of Chunk List Parameter is 260 bytes

########################################################################
&print:<B>Requested HMAC Algorithm Parameter Header</B>
./HMACAlgoWithNoAlgoList.seq:./HMACAlgoWithNoAlgoList.def:::The list of HMAC Identifiers in HMAC-ALGO parameter is empty
./HMACAlgoWithoutSha1.seq:./HMACAlgoWithoutSha1.def:::The HMAC algorithm based on SHA-1 MUST be supported and included in the HMAC-ALGO parameter

# TODO
# AuthAppearMoreThanOnce.seq
# Auth is received in diff state

