#!/usr/bin/perl
#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009, 2010
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
##############################################################################
BEGIN {	$V6evalTool::TestVersion = '$Name: REL_1_0_3 $'; }

use lib "../common";
use V6evalTool;
use SCTP;

%pktdesc = (
	sctp_chunk_init_unres_addr	=> "Send SCTP CHUNK_INIT (Unresolvable Address)",
	sctp_chunk_abort_unres_addr	=> "Recv SCTP CHUNK_ABORT (Unresolvable Address)",
);

$IF0 = Link0;

vCapture($IF0);

sctpCheckEnv($IF0);

sctpStartServer($IF0);

vLogHTML('<B>================ Main Test =================</B>');

vSend($IF0, sctp_chunk_init_unres_addr);

%ret = vWarpRecv($IF0, 30, 0, 0, sctp_chunk_abort_unres_addr);
if($ret{status} != 0 || $ret{recvFrame} ne sctp_chunk_abort_unres_addr) {
	vLogHTML('Cannot receive SCTP CHUNK_ABORT<BR>');
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>'); 
	exit $V6evalTool::exitFail;
}

vLogHTML(OK);
exit $V6evalTool::exitPass;

######################################################################
__END__

=head1 NAME

  GEN_UnresolvableAddress.seq - Generation of error cause Unresolvable Address

=head1 PURPOSE

  To check that if INIT chunk is received with unresolvable address then the
  endpoint should send an ABORT message with cause Unresolvable Address.

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./GEN_UnresolvableAddress.seq">./GEN_UnresolvableAddress.seq</A> [-tooloption ...] -pkt <A HREF="./GEN_UnresolvableAddress.def">./GEN_UnresolvableAddress.def</A>
    -tooloption : v6eval tool option
  See Also: <A HREF="../common/STD_PKT_COMMON.def">../common/STD_PKT_COMMON.def</A>
            <A HREF="../common/SCTP_COMMON.def">../common/SCTP_COMMON.def</A>
</PRE>

=end html

=head1 PRE-TEST CONDITION

  Association is not established between endpoint A and B. Arrange 
  data in endpoint A such that INIT chunk with unresolvable address
  is sent to endpoint B.

=head1 TEST PROCEDURE

  Endpoint A                           Endpoint B                ULP
  (CLOSED)                             (CLOSED)

  INIT          ----------------->
  (with Unresolvable Address)
                <-----------------      ABORT
                                        (Unresolvable Address)

  TEST DESCRIPTION:

  1. Send INIT chunk from endpoint A to B with unresolvable address.
  2. Check A: ABORT should be received at endpoint A.
  3. Check B: Error cause in ABORT is set to "Unresolvable Address".

=head1 NOTE

  None

=head1 REFERENCE

  RFC 4960

  3.3.10.5.  Unresolvable Address (5)

    Cause of error
    ---------------

    Unresolvable Address: Indicates that the sender is not able to
    resolve the specified address parameter (e.g., type of address is not
    supported by the sender).  This is usually sent in combination with
    or within an ABORT.

       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |     Cause Code=5              |      Cause Length             |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       /                  Unresolvable Address                         /
       \                                                               \
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    Unresolvable Address: variable length

      The Unresolvable Address field contains the complete Type, Length,
      and Value of the address parameter (or Host Name parameter) that
      contains the unresolvable address or host name.

