#!/usr/bin/perl
#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
##############################################################################
BEGIN {	$V6evalTool::TestVersion = '$Name: REL_1_0_0 $'; }

use lib "../common";
use V6evalTool;
use SCTP;

%pktdesc = (
	sctp_chunk_heartbeat		=> "Recv SCTP CHUNK_HEARTBEAT",
	sctp_chunk_heartbeat_ack	=> "Send SCTP CHUNK_HEARTBEAT_ACK",
);

$IF0 = Link0;

vCapture($IF0);

sctpCheckEnv($IF0);

sctpStartServer($IF0);

vConnect($IF0);

vLogHTML('<B>================ Main Test =================</B>');

%ret = vWarpRecv3($IF0, 60, 0, 0, sctp_chunk_heartbeat);
if($ret{status} != 0 || $ret{recvFrame} ne 'sctp_chunk_heartbeat') {
	vLogHTML('Cannot receive SCTP CHUNK_HEARTBEAT<BR>');
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>'); 
	exit $V6evalTool::exitFail;
}

$HBINFO = $ret{sctpGetFieldName("CHUNK_HEARTBEAT.HeartbeatInfo.Data")};
vWarpCPP("-DHBINFO=\\\"$HBINFO\\\"");
vSend($IF0, sctp_chunk_heartbeat_ack);

vSendMsg($IF0);

vClose($IF0);

vLogHTML(OK);
exit $V6evalTool::exitPass;

######################################################################
__END__

=head1 NAME

  HB_SendToIdleAddr.seq - HEARTBEAT message is sent periodically to an idle active station

=head1 PURPOSE

  To check that when a destination transport address is idle for
  a long time then HEARTBEAT message is sent to that address.

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./HB_SendToIdleAddr.seq">./HB_SendToIdleAddr.seq</A> [-tooloption ...] -pkt <A HREF="./HB_SendToIdleAddr.def">./HB_SendToIdleAddr.def</A>
    -tooloption : v6eval tool option
  See Also: <A HREF="../common/STD_PKT_COMMON.def">../common/STD_PKT_COMMON.def</A>
            <A HREF="../common/SCTP_COMMON.def">../common/SCTP_COMMON.def</A>
</PRE>

=end html

=head1 PRE-TEST CONDITION

  Association is established between endpoint A and B. Arrange 
  the data in endpoint A and B such that no DATA or control chunk
  is exchanged between them.

=head1 TEST PROCEDURE

  Endpoint A                           Endpoint B                ULP
  (ESTABLISHED)                        (ESTABLISHED)

        No message is exchanged within current
                   Heartbeat period
                <-----------------   HEARTBEAT

  HEARTBEAT-ACK ----------------->

  TEST DESCRIPTION:

  1. From an endpoint in established state, do not send any message to 
     another endpoint within the current Heartbeat period. 
  2. Check A: HEARTBEAT message is sent to its peer. 

=head1 NOTE

  None

=head1 REFERENCE

  RFC 4960

  8.3.  Path Heartbeat

=begin html
<PRE>
    <B>By default, an SCTP endpoint SHOULD monitor the reachability of the
    idle destination transport address(es) of its peer by sending a
    HEARTBEAT chunk periodically to the destination transport
    address(es).</B>  HEARTBEAT sending MAY begin upon reaching the
    ESTABLISHED state and is discontinued after sending either SHUTDOWN
    or SHUTDOWN-ACK.  A receiver of a HEARTBEAT MUST respond to a
    HEARTBEAT with a HEARTBEAT-ACK after entering the COOKIE-ECHOED state
    (INIT sender) or the ESTABLISHED state (INIT receiver), up until
    reaching the SHUTDOWN-SENT state (SHUTDOWN sender) or the SHUTDOWN-
    ACK-SENT state (SHUTDOWN receiver).
</PRE>

=end html

