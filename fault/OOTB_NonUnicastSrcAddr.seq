#!/usr/bin/perl
#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
##############################################################################
BEGIN {	$V6evalTool::TestVersion = '$Name: REL_1_0_1 $'; }

use lib "../common";
use V6evalTool;
use SCTP;

%pktdesc = (
	sctp_chunk_data_src_nonunicast	=> "Send SCTP CHUNK_DATA (from a non-unicast address)",
);

$IF0 = Link0;

vCapture($IF0);

sctpCheckEnv($IF0);

sctpStartServer($IF0);

vLogHTML('<B>================ Main Test =================</B>');

vSend($IF0, sctp_chunk_data_src_nonunicast);

%ret = vWarpRecv($IF0, 5, 0, 0, sctp_chunk_any_rcv);
if($ret{status} == 0 && $ret{recvFrame} eq sctp_chunk_any_rcv) {
	vLogHTML('Received Unexpected Packet<BR>');
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>'); 
	exit $V6evalTool::exitFail;
}

vConnect($IF0);

vSendMsg($IF0);

vClose($IF0);

vLogHTML(OK);
exit $V6evalTool::exitPass;

######################################################################
__END__

=head1 NAME

  OOTB_NonUnicastSrcAddr.seq - Valid packet is received from non-unicast address

=head1 PURPOSE

  To check that if valid packet is received from non-unicast address, the
  enpoint should silently discard the packet.

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./OOTB_NonUnicastSrcAddr.seq">./OOTB_NonUnicastSrcAddr.seq</A> [-tooloption ...] -pkt <A HREF="./OOTB_NonUnicastSrcAddr.def">./OOTB_NonUnicastSrcAddr.def</A>
    -tooloption : v6eval tool option
  See Also: <A HREF="../common/STD_PKT_COMMON.def">../common/STD_PKT_COMMON.def</A>
            <A HREF="../common/SCTP_COMMON.def">../common/SCTP_COMMON.def</A>
</PRE>

=end html

=head1 PRE-TEST CONDITION

  Association is not established between endpoint A and B. Arrange the
  data in endpoint A such that DATA is sent to endpoint B with non
  unicast source address.

=head1 TEST PROCEDURE

  Endpoint A                           Endpoint B                ULP
  (CLOSED)                             (CLOSED)

  DATA           ---------------->      Silently discard
  (from a non-unicast address)
  INIT           ---------------->

                 <----------------      INIT-ACK

  TEST DESCRIPTION:

  1. Send valid DATA message with non-unicast source address from endpoint
     A to B, when there is no association between them. 
  2. Check A: DATA message will be silently discarded.
  3. Check B: State of endpoint B is not disturbed.

=head1 NOTE

  None

=head1 REFERENCE

  RFC 4960

  8.4.  Handle "Out of the Blue" Packets

    An SCTP packet is called an "out of the blue" (OOTB) packet if it is
    correctly formed (i.e., passed the receiver's CRC32c check; see
    Section 6.8), but the receiver is not able to identify the
    association to which this packet belongs.

    The receiver of an OOTB packet MUST do the following:

=begin html
<PRE>
    <B>1)  If the OOTB packet is to or from a non-unicast address, a
        receiver SHOULD silently discard the packet.</B>  Otherwise,
</PRE>

=end html

