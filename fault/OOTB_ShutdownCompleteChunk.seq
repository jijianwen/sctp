#!/usr/bin/perl
#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
##############################################################################
BEGIN {	$V6evalTool::TestVersion = '$Name: REL_1_0_1 $'; }

use lib "../common";
use V6evalTool;
use SCTP;

%pktdesc = (
	sctp_chunk_shutdown_complete_ootb0	=> "Send SCTP CHUNK_SHUTDOWN_COMPLETE (OOTB Packet, T bit set to 0)",
	sctp_chunk_shutdown_complete_ootb1	=> "Send SCTP CHUNK_SHUTDOWN_COMPLETE (OOTB Packet, T bit set to 1)",
);

$IF0 = Link0;

vCapture($IF0);

sctpCheckEnv($IF0);

vLogHTML('<B>================ Main Test =================</B>');

vSend($IF0, sctp_chunk_shutdown_complete_ootb0);

%ret = vWarpRecv($IF0, 5, 0, 0, sctp_chunk_any_rcv);
if($ret{status} == 0 && $ret{recvFrame} eq sctp_chunk_any_rcv) {
	vLogHTML('Received Unexpected Packet<BR>');
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>'); 
	exit $V6evalTool::exitFail;
}

vSend($IF0, sctp_chunk_shutdown_complete_ootb1);

%ret = vWarpRecv($IF0, 5, 0, 0, sctp_chunk_any_rcv);
if($ret{status} == 0 && $ret{recvFrame} eq sctp_chunk_any_rcv) {
	vLogHTML('Received Unexpected Packet<BR>');
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>'); 
	exit $V6evalTool::exitFail;
}

vLogHTML(OK);
exit $V6evalTool::exitPass;

######################################################################
__END__

=head1 NAME

  OOTB_ShutdownCompleteChunk.seq - SHUTDOWN-COMPLETE chunk is received from an address with which endpoint has no association

=head1 PURPOSE

  To check that if SHUTDOWN-COMPLETE chunk is received from an address
  with which endpoint has no association, the enpoint should silently
  discard the packet.

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./OOTB_ShutdownCompleteChunk.seq">./OOTB_ShutdownCompleteChunk.seq</A> [-tooloption ...] -pkt <A HREF="./OOTB_ShutdownCompleteChunk.def">./OOTB_ShutdownCompleteChunk.def</A>
    -tooloption : v6eval tool option
  See Also: <A HREF="../common/STD_PKT_COMMON.def">../common/STD_PKT_COMMON.def</A>
            <A HREF="../common/SCTP_COMMON.def">../common/SCTP_COMMON.def</A>
</PRE>

=end html

=head1 PRE-TEST CONDITION

  Association is not established between endpoint A and B. Arrange the data
  in endpoint A such that SHUTDOWN-COMPLETE is sent to endpoint B.

=head1 TEST PROCEDURE

  Endpoint A                           Endpoint B                ULP
  (CLOSED)                             (CLOSED)

  SHUTDOWN-COMPLETE ---------------->    Silently discard
  (with T bit set to 0)
  SHUTDOWN-COMPLETE ---------------->    Silently discard
  (with T bit set to 1)

  TEST DESCRIPTION:

  1. Send SHUTDOWN-COMPLETE message from endpoint A to B, when there
     is no association between them. 
  2. Check A: SHUTDOWN-COMPLETE message will be discarded.
  3. Check B: State of endpoint B is not disturbed.
  4. Repeat the test case with T bit set to 0 and 1.

=head1 NOTE

  None

=head1 REFERENCE

  RFC 4960

  8.4.  Handle "Out of the Blue" Packets

    5)  If the packet contains a SHUTDOWN ACK chunk, the receiver should
        respond to the sender of the OOTB packet with a SHUTDOWN
        COMPLETE.  When sending the SHUTDOWN COMPLETE, the receiver of
        the OOTB packet must fill in the Verification Tag field of the
        outbound packet with the Verification Tag received in the
        SHUTDOWN ACK and set the T bit in the Chunk Flags to indicate
        that the Verification Tag is reflected.  Otherwise,

=begin html
<PRE>
    <B>6)  If the packet contains a SHUTDOWN COMPLETE chunk, the receiver
        should silently discard the packet and take no further action.
        Otherwise,</B>
</PRE>

=end html

    7)  If the packet contains a "Stale Cookie" ERROR or a COOKIE ACK,
        the SCTP packet should be silently discarded.  Otherwise,

