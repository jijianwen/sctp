// SCTP Conformance Test Suite Implementation
// (C) Copyright Fujitsu Ltd. 2008, 2009, 2010
//
// This file is part of the SCTP Conformance Test Suite implementation.
//
// The SCTP Conformance Test Suite implementation is free software;
// you can redistribute it and/or modify it under the terms of
// the GNU General Public License version 2 as published by
// the Free Software Foundation.
//
// The SCTP Conformance Test Suite implementation is distributed in the
// hope that it will be useful, but WITHOUT ANY WARRANTY; without even
// the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
// PURPOSE. See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with GNU CC; see the file COPYING.  If not, write to
// the Free Software Foundation, 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.
//
// Please send any bug reports or fixes you make to the
// email address(es):
//    networktest sctp <networktest-sctp@lists.sourceforge.net>
//
// Or submit a bug report through the following website:
//    http://networktest.sourceforge.net/
//
// Written or modified by:
//    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
//    Wei Yongjun <yjwei@cn.fujitsu.com>
//
// Any bugs reported given to us we will try to fix... any fixes shared will
// be incorporated into the next SCTP release.
//

#include "../common/STD_PKT_COMMON.def"

//
// SCTP CHUNK_INIT
//
PKG_SCTP_SHORT_SEND(
	sctp_chunk_init_ack_mismatch,
	{
		chunk = chunk_init_ack_mismatch;
	}
)

CHUNK_INIT_ACK chunk_init_ack_mismatch {
	InitiateTag = INITTAG;
	AdvRecvWindow = ARWND;
	NumOfOutbound = 1;
	NumOfInbound = 1;
	TSN = INITTSN;
	Param = cookie_snd;
}

//
// SCTP CHUNK_DATA
//
PKG_SCTP_SHORT_SEND(
	sctp_chunk_data_bad_str,
	{
		chunk = chunk_data_bad_str;
	}
)

CHUNK_DATA chunk_data_bad_str {
	UFlag = 1;
	BFlag = 1;
	EFlag = 1;
	Identifier = 1;
#ifndef SNDTSN
	TSN = INITTSN;
#else
	TSN = SNDTSN;
#endif
	payload = datax_snd;
}

//
// SCTP CHUNK_ERROR
//
PKG_SCTP_SHORT_RECV(
	sctp_chunk_error,
	{
		chunk = chunk_error;
	}
)

CHUNK_ERROR chunk_error {
	Error = err_invalid_stream;
}

InvalidStreamIndentifier err_invalid_stream {
	Identifier = 1;
}

//
// SCTP CHUNK_ERROR
//
PKG_SCTP_SHORT_RECV(
	sctp_chunk_error_and_sack,
	{
		chunk = comb(chunk_error, chunk_sack_rcv);
	}
)

