#!/usr/bin/perl
#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
##############################################################################
BEGIN {	$V6evalTool::TestVersion = '$Name: REL_1_0_1 $'; }

use lib "../common";
use V6evalTool;
use SCTP;

%pktdesc = (
	sctp_chunk_init_support_ipv4	=> "Send SCTP CHUNK_INIT (with Supported IPv4 Address Field)",
);

$IF0 = Link0;

vCapture($IF0);

sctpCheckEnv($IF0);

sctpStartServer($IF0);

vLogHTML('<B>================ Main Test =================</B>');

vConnect($IF0, sctp_chunk_init_support_ipv4);

vSendMsg($IF0);

vClose($IF0);

vLogHTML(OK);
exit $V6evalTool::exitPass;

######################################################################
__END__

=head1 NAME

  InitSuppIPv4Addr.seq - INIT chunk is received with Supported Address Field containing only IPv4 Address type

=head1 PURPOSE

  To check that if INIT chunk is received with Supported Address Field
  containing only IPv4 Address type then the endpoint should acceptable
  the address type which is indicated in Supported Address Types parameter.

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./InitSuppIPv4Addr.seq">./InitSuppIPv4Addr.seq</A> [-tooloption ...] -pkt <A HREF="./InitSuppIPv4Addr.def">./InitSuppIPv4Addr.def</A>
    -tooloption : v6eval tool option
  See Also: <A HREF="../common/STD_PKT_COMMON.def">../common/STD_PKT_COMMON.def</A>
            <A HREF="../common/SCTP_COMMON.def">../common/SCTP_COMMON.def</A>
</PRE>

=end html

=head1 PRE-TEST CONDITION

  Association is not established between endpoint A and B. Arrange the
  data in endpoint A such that INIT chunk with Supported Address Field
  containing only IPv4 Address type is sent in to endpoint B.

=head1 TEST PROCEDURE

  Endpoint A                           Endpoint B                ULP
  (CLOSED)                             (CLOSED)

  INIT          ----------------->
  (with Supported Address Field IPv4)
                <-----------------      INIT-ACK

  COOKIE-ECHO   ----------------->
                           
                <-----------------  COOKIE-ACK 

  TEST DESCRIPTION:

  1. Attempt to make an association from endpoint A to B. Send INIT 
     message with Supported Address field containing only IPv4
     Address type. 
     Record the message sequence using a signal emulator.
  2. Check A: Association is established between endpoint A and B.

=head1 NOTE

  None

=head1 REFERENCE

  RFC 4960

  5.1.2.  Handle Address Parameters

    The sender of INIT may include a 'Supported Address Types' parameter
    in the INIT to indicate what types of address are acceptable.  When
    this parameter is present, the receiver of INIT (initiate) MUST
    either use one of the address types indicated in the Supported
    Address Types parameter when responding to the INIT, or abort the
    association with an "Unresolvable Address" error cause if it is
    unwilling or incapable of using any of the address types indicated by
    its peer.

