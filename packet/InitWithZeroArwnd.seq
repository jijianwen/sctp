#!/usr/bin/perl
#
# SCTP Conformance Test Suite Implementation
# (C) Copyright Fujitsu Ltd. 2008, 2009
#
# This file is part of the SCTP Conformance Test Suite implementation.
#
# The SCTP Conformance Test Suite implementation is free software;
# you can redistribute it and/or modify it under the terms of
# the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# The SCTP Conformance Test Suite implementation is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Please send any bug reports or fixes you make to the
# email address(es):
#    networktest sctp <networktest-sctp@lists.sourceforge.net>
#
# Or submit a bug report through the following website:
#    http://networktest.sourceforge.net/
#
# Written or modified by:
#    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
#    Wei Yongjun <yjwei@cn.fujitsu.com>
#
# Any bugs reported given to us we will try to fix... any fixes shared will
# be incorporated into the next SCTP release.
#
##############################################################################
BEGIN {	$V6evalTool::TestVersion = '$Name: REL_1_0_0 $'; }

use lib "../common";
use V6evalTool;
use SCTP;

%pktdesc = (
	sctp_chunk_init_invalid_param	=> "Send SCTP CHUNK_INIT (with AdvRecvWindow = 0)",
	sctp_chunk_abort_invalid_param	=> "Recv SCTP CHUNK_ABORT (Invalid Mandatory Parameter)"
);

$IF0 = Link0;

vCapture($IF0);

sctpCheckEnv($IF0);

sctpStartServer($IF0);

vLogHTML('<B>================ Main Test =================</B>');

vSend($IF0, sctp_chunk_init_invalid_param);

%ret = vWarpRecv($IF0, 10, 0, 0, sctp_chunk_abort_invalid_param);
if($ret{status} != 0 || $ret{recvFrame} ne sctp_chunk_abort_invalid_param) {
	vLogHTML('Cannot receive SCTP CHUNK_ABORT<BR>');
	vLogHTML('<FONT COLOR="#00FF00">NG</FONT>'); 
	exit $V6evalTool::exitFail;
}

vLogHTML(OK);
exit $V6evalTool::exitPass;

######################################################################
__END__

=head1 NAME

  InitWithZeroArwnd.seq - INIT chunk is received with advertised receiver window credit set to zero

=head1 PURPOSE

  To check that if INIT chunk is received with advertised receiver window
  credit set to zero, the endpoint should responded it with ABORT chunk
  including cause of invalid mandatory parameter.

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./InitWithZeroArwnd.seq">./InitWithZeroArwnd.seq</A> [-tooloption ...] -pkt <A HREF="./InitWithZeroArwnd.def">./InitWithZeroArwnd.def</A>
    -tooloption : v6eval tool option
  See Also: <A HREF="../common/STD_PKT_COMMON.def">../common/STD_PKT_COMMON.def</A>
            <A HREF="../common/SCTP_COMMON.def">../common/SCTP_COMMON.def</A>
</PRE>

=end html

=head1 PRE-TEST CONDITION

  Association is not established between endpoint A and B. Arrange the
  data in endpoint A such that INIT message with Advertised Receiver
  Window Credit set to zero is sent to endpoint B.

=head1 TEST PROCEDURE

  Endpoint A                           Endpoint B                ULP
  (CLOSED)                             (CLOSED)

  INIT          ----------------->
  (with AdvRecvWindow = 0)
                <-----------------      ABORT
                                        (Invalid Mandatory Parameter)

  TEST DESCRIPTION:

  1. Attempt to make an association from endpoint A to endpoint B. Send 
     INIT message with Advertised Receiver Window Credit set to zero.
     Record the message sequence using a signal emulator.
  2. Check A: INIT message is responded with ABORT including cause of 
     invalid mandatory parameter.

=head1 NOTE

  None

=head1 REFERENCE

  RFC 4960

  6.  User Data Transfer

=begin html
<PRE>
    An SCTP receiver MUST be able to receive a minimum of 1500 bytes in
    one SCTP packet.  <B>This means that an SCTP endpoint MUST NOT indicate
    less than 1500 bytes in its initial a_rwnd sent in the INIT or INIT
    ACK.</B>
</PRE>

=end html

