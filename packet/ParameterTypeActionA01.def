// SCTP Conformance Test Suite Implementation
// (C) Copyright Fujitsu Ltd. 2008, 2009
//
// This file is part of the SCTP Conformance Test Suite implementation.
//
// The SCTP Conformance Test Suite implementation is free software;
// you can redistribute it and/or modify it under the terms of
// the GNU General Public License version 2 as published by
// the Free Software Foundation.
//
// The SCTP Conformance Test Suite implementation is distributed in the
// hope that it will be useful, but WITHOUT ANY WARRANTY; without even
// the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
// PURPOSE. See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with GNU CC; see the file COPYING.  If not, write to
// the Free Software Foundation, 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.
//
// Please send any bug reports or fixes you make to the
// email address(es):
//    networktest sctp <networktest-sctp@lists.sourceforge.net>
//
// Or submit a bug report through the following website:
//    http://networktest.sourceforge.net/
//
// Written or modified by:
//    Hiroaki Kago <linuxsctp-kg@ml.css.fujitsu.com>
//    Wei Yongjun <yjwei@cn.fujitsu.com>
//
// Any bugs reported given to us we will try to fix... any fixes shared will
// be incorporated into the next SCTP release.
//

#include "../common/STD_PKT_COMMON.def"

//
// SCTP CHUNK_INIT
//
PKG_SCTP_EXTH_SEND(
	sctp_chunk_init_param_01,
	{
		SourcePort = SCTP_TN0_PORT;
		DestinationPort = SCTP_NUT0_PORT;
	},
	{
		chunk = chunk_init_param_01;
	}
)

CHUNK_INIT chunk_init_param_01 {
	InitiateTag = INITTAG;
	AdvRecvWindow = ARWND;
	NumOfOutbound = OS;
	NumOfInbound = MIS;
	TSN = INITTSN;
	Param = param_type_01;
	Param = hostname_badname;
}

ParameterAny param_type_01 {
	Type = 0x7F00;
	Data = repeat(0x00, 4);
}

HostNameAddress hostname_badname {
	HostName = ascii("TN_BAD_NAME0"); 
}

//
// SCTP CHUNK_INIT_ACK
//
PKG_SCTP_SHORT_RECV(
	sctp_chunk_init_ack_01,
	{
		chunk = oneof(chunk_init_ack_01_1, chunk_init_ack_01_2);
	}
)

CHUNK_INIT_ACK chunk_init_ack_01_1 {
	InitiateTag = any;
	AdvRecvWindow = any;
	NumOfOutbound = any;
	NumOfInbound = any;
	TSN = any;
	Param = cookie_rcv;
	Param = unrecognized_param;
}

CHUNK_INIT_ACK chunk_init_ack_01_2 {
	InitiateTag = any;
	AdvRecvWindow = any;
	NumOfOutbound = any;
	NumOfInbound = any;
	TSN = any;
	Param = cookie_rcv;
	Param = adtindt_snd;
	Param = unrecognized_param;
}

PUnrecognizedParameters unrecognized_param {
	Parameters = param_type_01;
}

